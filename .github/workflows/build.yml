name: build
on:
  push:
    branches:
      - "**"
    tags:
      - "**"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            npm_config_arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: x64
            npm_config_arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            npm_config_arch: arm64
          - os: ubuntu-latest
            platform: linux
            arch: armhf
            npm_config_arch: arm
          - os: ubuntu-latest
            platform: alpine
            arch: x64
            npm_config_arch: x64
          - os: ubuntu-latest
            platform: alpine
            arch: arm64
            npm_config_arch: arm64
          - os: macos-latest
            platform: darwin
            arch: x64
            npm_config_arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
            npm_config_arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - run: npm install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_arch: ${{ matrix.npm_config_arch }}
      - run: npm run build
      - shell: pwsh
        run: echo "target=${{ matrix.platform }}-${{ matrix.arch }}" >> $env:GITHUB_ENV
      - run: npx vsce package --target ${{ env.target }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.target }}
          path: "*.vsix"

  pre-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/pre') && github.event.workflow_run.conclusion == 'success'
    steps:
      - run: npm run publish-prerelease
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && !startsWith(github.ref, 'refs/tags/pre') && github.event.workflow_run.conclusion == 'success'
    steps:
      - run: npm run publish
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}